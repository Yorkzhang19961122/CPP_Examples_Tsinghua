// 例6-7void类型指针的使用.cpp : 此文件包含 "main" 函数。程序执行将在此处开始并结束。
//

#include <iostream>
using namespace std;

int main(){
    //!void voidObject; //错，不能声明void类型的变量
    void* pv;    //对，可以声明void类型的指针，但是只能存放（容纳）地址，而不能通过这样的指针访问对象
    int i = 5;
    pv = &i;  //将int型变量的地址存放在pv中
    //cout << "&i= " << &i << endl;
    int* pint = static_cast<int*>(pv);  //void指针转换为int指针
    cout << "*pint= " << *pint << endl;
    return 0;
}

/*********************************************************************
const指针：
不能通过指向常量的指针改变所指对象的值，但指针本身可以改变，可以指向另外的对象
例如：
int a;
const int *p1 = &a;  //p1是指向常量的指针
int b;
p1 = &b;  //正确，p1指针本身的值可以改变
*p1 = 1;  //错误，不能通过p1改变所指的对象
**********************************************************************/
/**********************************************************************
指针常量：
若声明指针常量，则指针本身的值不能被改变
例如：
int a;
int* const p2 = &a;  //定义p2是指针常量
p2 = &b;  //错误，p2是指针常量，值不能改变
**********************************************************************/